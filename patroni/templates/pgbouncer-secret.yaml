{{- $pgbServerTls := default (dict) (index (default (dict) (index .Values.pgbouncer "tls")) "server") }}
{{- $pgbClientTls := default (dict) (index (default (dict) (index .Values.pgbouncer "tls")) "client") }}
{{- if .Capabilities.APIVersions.Has "cert-manager.io/v1" }}
{{- if index (default (dict) (index $pgbServerTls "issuerRef")) "name" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "patroni.pgbouncer.tls.serverSecret" . }}
spec:
  secretName: {{ include "patroni.pgbouncer.tls.serverSecret" . }}
  commonName: {{ printf "%s.%s.svc" (include "patroni.fullname" .) .Release.Namespace | quote }}
  dnsNames:
  - {{ include "patroni.fullname" . | quote }}
  - {{ printf "%s.%s.svc" (include "patroni.fullname" .) .Release.Namespace | quote }}
  - {{ printf "%s.%s.svc.cluster.local" (include "patroni.fullname" .) .Release.Namespace | quote }}
  issuerRef:
    name: {{ $pgbServerTls.issuerRef.name }}
    kind: {{ default "Issuer" (index $pgbServerTls.issuerRef "kind") }}
{{- end }}
{{- if index (default (dict) (index $pgbClientTls "issuerRef")) "name" }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "patroni.pgbouncer.tls.clientSecret" . }}
spec:
  secretName: {{ include "patroni.pgbouncer.tls.clientSecret" . }}
  commonName: {{ printf "%s.%s.svc" (include "patroni.fullname" .) .Release.Namespace | quote }}
  dnsNames:
  - {{ include "patroni.fullname" . | quote }}
  - {{ printf "%s.%s.svc" (include "patroni.fullname" .) .Release.Namespace | quote }}
  - {{ printf "%s.%s.svc.cluster.local" (include "patroni.fullname" .) .Release.Namespace | quote }}
  issuerRef:
    name: {{ $pgbClientTls.issuerRef.name }}
    kind: {{ default "Issuer" (index $pgbClientTls.issuerRef "kind") }}
{{- end }}
{{- end }}
{{- if and (not (index (default (dict) (index $pgbServerTls "issuerRef")) "name")) (index $pgbServerTls "ca") (index $pgbServerTls "crt") (index $pgbServerTls "key") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "patroni.pgbouncer.tls.serverSecret" . }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $pgbServerTls.ca | b64enc }}
  tls.crt: {{ $pgbServerTls.crt | b64enc }}
  tls.key: {{ $pgbServerTls.key | b64enc }}
{{- end }}
{{- if and (not (index (default (dict) (index $pgbClientTls "issuerRef")) "name")) (index $pgbClientTls "ca") (index $pgbClientTls "crt") (index $pgbClientTls "key") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "patroni.pgbouncer.tls.clientSecret" . }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $pgbClientTls.ca | b64enc }}
  tls.crt: {{ $pgbClientTls.crt | b64enc }}
  tls.key: {{ $pgbClientTls.key | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "patroni.fullname" . }}-pgbouncer
  labels:
    app: {{ template "patroni.fullname" . }}
    chart: {{ template "patroni.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  pgbouncer.ini: {{ include "patroni.pgbouncer" . | b64enc }}
  userlist.txt: {{ printf "\"%s\" \"%s\"" .Values.pgbouncer.credentials.username .Values.pgbouncer.credentials.password | b64enc }}
